#!/bin/bash

echo "starting test script..."

echo "logic tests..."
true && false || echo "correct"
false && false || echo "incorrect"

function testFunction1 {
    echo "Function Test 1 | Success"
}

testFunction2() {
    echo "Function Test 2 | Success - $1"
}

testFunction3() { echo "Function Test 3 | Success"; export SET_IN_FUNC=TRUE; }

testFunction1
testFunction2 "more complex"
testFunction3

if [[ $SET_IN_FUNC != "TRUE" ]]
then
    echo "Variables set in functions should be updated on the global context | Failure"
    exit 1
fi

read -n 1 -p "Continue simple 'if' test? or Exit (y=yes / n=no)" CONTINUE

if [[ $CONTINUE == "y" ]]
then
    echo "Nice!"
elif [[ $CONTINUE == "n" ]]
then
    echo "ok bye!"
    exit
else
    echo "unknown option selected: $CONTINUE"
    exit 1
fi

echo "You continued!"

read -n 1 -p "Continue nested 'if' test? or Exit (y=yes / n=no)" CONTINUE

if [[ "$CONTINUE" == "y" ]]
then
    echo "A bit more complicated now!"
    read -n 1 -p "Are you sure? or Exit (y=yes / n=no)" SURE
    if [[ $SURE == "y" ]]
    then
        echo "excellent"
    elif [[ $SURE == "n" ]]
    then
        echo "no problem!"
        exit
    else
        echo "unknown option selected: $SURE"
        exit 1
    fi
elif [[ "$CONTINUE" == "n" ]]
then
    echo "ok bye!"
    exit
else
    echo "unknown option selected: $CONTINUE"
    exit 1
fi

echo "You continued and then confirmed!"

read -n 1 -p "continue simple 'while' test? (y=yes /n=no)" CONTINUE

if [[ $CONTINUE == "n" ]]
then
    echo "ok bye!"
    exit
elif [[ $CONTINUE != "y" ]]
then
    echo "unknown option selected: $CONTINUE"
    exit 1
fi

while [[ "$DOIT" != "c" ]]
do
    read -n 1 -p "type 'c' to end, any other character to keep looping:" DOIT
    echo "Pressed: $DOIT"
done

echo "While loop ended!"
unset DOIT

read -n 1 -p "continue complex 'while' test? (y=yes /n=no)" CONTINUE

if [[ "$CONTINUE" == "n" ]]
then
    echo "ok bye!"
    exit
elif [[ "$CONTINUE" != "y" ]]
then
    echo "unknown option selected: $CONTINUE"
    exit 1
fi

while [[ $DOIT != "c" ]]
do
    while [[ $READY != "y" ]]
    do
        echo "Inner Loop"
        read -n 1 -p "Are You ready? (y/n)" READY
        if [[ $READY == "y" ]]
        then
            echo "YOU ARE READY!"
        else
            echo "YOU ARE NOT READY!!!"
        fi
    done
    echo "Outer Loop"
    read -n 1 -p "type 'c' to end, any other character to keep looping:" DOIT
    echo "Pressed: $DOIT"
done

echo "Nested while loops ended!"


read -n 1 -p "continue simple 'case' test? (y=yes /n=no)" CONTINUE

if [[ "$CONTINUE" == "n" ]]
then
    echo "ok bye!"
    exit
elif [[ "$CONTINUE" != "y" ]]
then
    echo "unknown option selected: $CONTINUE"
    exit 1
fi

case 2 in
    1) echo "case selection incorrect | Failure"
        ;;
    2) echo "case selection correct | Success"
        ;;
    *) echo "case selection incorrect - defaulted | Failure"
        ;;
esac

read -n 1 -p "continue complex 'case' test? (y=yes /n=no)" CONTINUE

if [[ "$CONTINUE" == "n" ]]
then
    echo "ok bye!"
    exit
elif [[ "$CONTINUE" != "y" ]]
then
    echo "unknown option selected: $CONTINUE"
    exit 1
fi

export TEST_VALUE="test option"

case $TEST_VALUE in
    'main') echo "incorrect value"
        ;;
    'test option') echo "correct value | Success"
        ;;
    *) echo "should not get here | Failure"
esac

read -n 1 -p "continue simple 'for' test? (y=yes /n=no)" CONTINUE

if [[ "$CONTINUE" == "n" ]]
then
    echo "ok bye!"
    exit
elif [[ "$CONTINUE" != "y" ]]
then
    echo "unknown option selected: $CONTINUE"
    exit 1
fi

for number in 1 2 3 4
do
    echo "number $number"
done